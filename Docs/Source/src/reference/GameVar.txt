/** \~russian »грова€ переменна€.
 *
 * ƒл€ этого типа перегружены следующие операторы:
 * - >, <, ==, >=, <=, != Ц логические операторы. “ип возвращаемого значени€ Ц @c bool.
 * - +=, -=, *=, /=, = Ц операторы присваивани€. “ип возвращаемого значени€ Ц GameVar.
 * - +, -, *, / Ц арифметические операторы. “ип возвращаемого значени€ Ц @c int.
 *
 * \~english Represents game variable.
 *
 * For the GameVar class following types of the operations are overloaded:
 * - >, <, ==, >=, <=, != Ц logical operators. The type of returning value Ц @c bool.
 * - +=, -=, *=, /=, = Ц operators of appropriation. The type of returning value Ц GameVar.
 * - +, -, *, / Ц arithmetic operators. The type of returning value Ц @c int.
 *
 * \~ @ingroup Server
 */

class GameVar
{
public:
    /** \~russian ¬озвращает значение игровой переменной.
     *
     * @return «начение игровой переменной.
     */
    int GetValue();

    /** \~russian ¬озвращает минимальное значение игровой переменной.
     *
     * @return ћинимальное значение игровой переменной.
     */
    int GetMin();

    /** \~russian ¬озвращает максимальное значение игровой переменной.
     *
     * @return ћаксимальное значение игровой переменной.
     */
    int GetMax();

    /** \~russian ќпредел€ет, €вл€етс€ ли переменна€ квестовой.
     *
     * @return @c true Ц если переменна€ квестова€; @c false Ц если нет.
     */
    bool IsQuest();

    /** \~russian ƒл€ квестовой переменной возвращает номер строки, котора€ находитс€ в файле @b FOQUEST.MSG.
     *
     * @return Ќомер строки в файле @b FOQUEST.MSG, соответствующей значению квестовой переменной.
     */
    uint GetQuestStr();

    /**
     * \~russian @name ѕерегруженные операторы сравнени€
     * \~english @name Overloaded equality operators
     */
    //@{

    int opCmp(const GameVar&);
    int opCmp(const int);

    bool opEquals(const GameVar&);
    bool opEquals(const int);

    //@}

    /**
     * \~russian @name ѕерегруженные операторы присваивани€
     * \~english @name Overloaded assignment operators
     */
    //@{

    GameVar& opAssign(const GameVar&);
    GameVar& opAssign(const int);

    GameVar& opDivAssign(const GameVar&);
    GameVar& opDivAssign(const int);

    GameVar& opMulAssign(const GameVar&);
    GameVar& opMulAssign(const int);

    GameVar& opSubAssign(const GameVar&);
    GameVar& opSubAssign(const int);

    GameVar& opAddAssign(const GameVar&);
    GameVar& opAddAssign(const int);

    //@}

    /**
     * \~russian @name ѕерегруженные арифметические операторы
     * \~english @name Overloaded arithmetic operators
     */
    //@{

    int opAdd(const GameVar&);
    int opAdd(const int);

    int opSub(const GameVar&);
    int opSub(const int);

    int opDiv(const GameVar&);
    int opDiv(const int);

    int opMul(const GameVar&);
    int opMul(const int);

    //@}
}

