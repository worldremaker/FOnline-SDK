

<b>Сумки.</b>


Термин "Сумки" - другое название инвентаря нпц.

Его можно выставлять двумя способами:

1. Через маппер, помещая предметы вручную в инвентарь каждому нпц.
2. Прописывая содержания инвентаря в файле "Bags.cfg" (\server\data\Bags.cfg), а затем присваивая в маппере/скриптом нпц параметр ST_BAG_ID, который означает номер сумки из этого файла.

Суть использования Bags.cfg:
-Оптимизация работы: проще создать один набор предметов и присваивать нпц только номер сумки с этим набором, чем выставлять каждому отдельно одни и те же предметы в маппере;
-Наличие рандома: можно создать несколько наборов предметов для одного нпц, чтобы потом при генерации выбирался случайным образом один из них.
-Простота редактирования: изменениями в одном файле можно вызывать глобальные изменения, нет необходимости лезть в карты, для вступления обновления в силу не нужна очистка БД (как в случае с картами).


Содержимое сумок постоянно обновляется. Период обновления сумок записан в переменной __BagRefreshTime (start_server_client.fos). По-умолчанию сумки обновляются каждый час реального времени. Обновление происходит в том случае, если в инвентаре нпц не найдено какого-то предмета из его базового набора.


<u>Для выставление инвентаря через маппер:</u>

0. Выделите нпц.
1. Убедитесь, что ST_BAG_ID равен нулю (ST_BAG_ID=0 обозначает, что данные для инвентаря берутся из маппера).
2. Поместите нужные предметы в инвентарь нпц (alt+click).
3. При необходимости - поместите нужное в слоты рук или брони (shift+click по предметам в инвентаре).

При старте сервера набор будет записан.

Важно учитывать то, что сохраняется только PID предметов, без каких-либо дополнительных параметров. Скажем, если вы хотите поместить в инвентарь ключ с определённым номером, после первого обновления сумки он уже будет обнулён. Поэтому для респауна подобных предметов надо писать специальные скрипты.


Далее речь пойдёт о файле Bags.cfg.


<b>ОБЩАЯ ИНФОРМАЦИЯ</b>

Структура файла простая: тут объявляются массивы двух типов, условно назовём их "наборы" и "сумки".

Наборы - хранят PID и количество предметов. У каждого набора своё уникальное название.

Сумки - составляются из наборов, названия нет, есть номер - тот самый, что надо присваивается нпц через параметр ST_BAG_ID.


Чтобы было понятнее, приведу пример:

###################################
BCapsSmall=PID_BOTTLE_CAPS:0-50 
BCapsMedium=PID_BOTTLE_CAPS:100-200
BCapsLarge=PID_BOTTLE_CAPS:350-500
GuardWeapon=PID_ASSAULT_RIFLE^m:1

bag_101=BCapsSmall GuardWeapon
bag_102=BCapsMedium GuardWeapon
bag_103=BCapsLarge GuardWeapon
###################################

Первые 4 строки - это наборы. Последние 3 - сумки.
Комбинируя 4 набора, мы составили сумки для трёх охранников - у каждого из них разное количество денег, но одинаковое вооружение. Потом надо запомнить эти три номера и прописать охранникам в маппере, выставляя понравившимся сумку получше. А добавив побольше наборов (скажем, медикаментов или выпивки), можно комбинировать из них разные сумки, не расписывая каждый раз отдельные предметы.




<b>ФОРМАТ ЗАПИСИ</b>



\b Наборы:

1. Объявляются в любом месте файла;
2. Имеют уникальное название;
3. Не могут быть пустыми;
4. Перечисление предметов: через "+" (=AND) или пробел (=OR).

\b Формат: ИмяНабора=PID_ПРЕДМЕТА^местоположение:количество(min-max)
(пример: GuardGun=PID_ASSAULT_RIFLE^m:0-1)

Количество и местоположение указывать необязательно.

Базовое местоположение - в инвентаре. Также можно указать:
^m - главный слот.
^e - внешний слот.
^a - слот брони.

Для количества можно указать как и точное число (PID_ASSAULT_RIFLE:1), так и диапазон (PID_BOTTLE_CAPS:0-30).


Пример набора, содержащего несколько групп предметов:

AllGuardMelee=PID_SLEDGEHAMMER^e PID_POWER_FIST^m+PID_SMALL_ENERGY_CELL^e:5-15

Из этого набора будет выбираться: ЛИБО кувалда, ЛИБО силовой кулак ПЛЮС батарейки (две группы перечислены через пробел, в одной стоит два предмета).

Магазины оружия заполняются автоматически.




\b Сумки:

1. Идут по-порядку;
2. Название строго "bag_#";
3. Могут быть пустыми.
4. Перечисление: через пробел (=AND), рандома нет.


\b Формат:

bag_#=Набор1 Набор2 Набор3

bag_0 не используется.

bag_1 оставляется пустым и означает пустую сумку по-умолчанию.




Для большего количества примеров просто откройте сам файл bags.cfg, он прост и интуитивно понятен.

Принцип оформления сумок FOnline:tLA описан в комментариях к файлу.





