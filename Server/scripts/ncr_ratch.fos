#include "_macros.fos"
#include "entire.fos"

#define HOLO_MSG_ID_BUGGY     ( 53 )
#define FORCE_DIALOG          return 53
#define ENTIRE_BUGGY_PLACE    ( 100 )

// **************************************************************************
// Таймаут для игрока на сдачу мусора Ретчу
// **************************************************************************

// установка локального таймаута для игрока(не нпц!) на сдачу мусора ретчу
// v0 - номер переменной
// v1 - число минут таймаута
void r_RatchTimeOutSet( Critter& player, Critter@ npc, int v0, int v1 )
{
// время таймаута записываем в переменную ncr_player_ratch_delivery_timeout игроку
    GameVar @ t = GetLocalVar( v0, player.Id );
    if( not valid( t ) )
        return;                  // чтото пошло не так
    t = __FullSecond + v1 * 60;
}
// проверка локального таймаута для игрока(не нпц!) на сдачу мусора ретчу
// номер переменной
bool d_RatchTimeOutCheck( Critter& player, Critter@ npc, int v0 )
{
    GameVar @ t = GetLocalVar( v0, player.Id );
    if( not valid( t ) )
        return true;         // таймаут еще и не начался
    if( __FullSecond >= uint( t.GetValue() ) )
        return true;         // таймаут истек
    else
        return false;        // таймаут еще жив
}
// инверсия
bool d_NotRatchTimeOutCheck( Critter& player, Critter@ npc, int v0 )
{
    return not d_RatchTimeOutCheck( player, npc, v0 );
}


// **************************************************************************
// Квест "БАГГИ"
// чтобы собрать багги, Ретчу нужны схемы подвески, которые можно найти
// в одном из компьютеров Сьерры
// игрок должен заюзать скилл "наука" на компьютере - после чего откроется
// диалог и персонаж получит возможность скачать данные на голодиск
// голодиск может быть любым, если будет несколько голодисков - изменится
// один, выбранный случайным образом
// **************************************************************************

// 79/99 координаты компа на базе Сьерра, первый подземный этаж - спальня
// PID компьтера 2011
// скрипт компьютера на базе Сьерра
// квестовая переменная q_ncr_ratch_buggy (4242)
bool s_UseComputer( Critter& player, Scenery& scenery, int skill, Item@ item )
{

    // false - передача евента на дальнейшую обработку
    // true - прекращение обработки
    // диалог вызывается при использовании навыка "наука"
    if( skill != SK_SCIENCE )
        return false;
    // не допускается использование предметов
    if( valid( item ) )
        return false;
    // на всякий случай...
    if( !player.IsPlayer() )
        return false;

    GameVar @ qVar = GetLocalVar( LVAR_q_ncr_ratch_buggy, player.Id );
    if( not valid( qVar ) )
        return false;
    // если статус квеста неправильный - диалога не произойдет
    if( qVar != 2 )
        return false;


    // запуск диалога с компьютером
    RunDialog( player, DIALOG_sad_comp_q_ratch_baggi, scenery.HexX, scenery.HexY, false );
    return true;
}

// выдаем голодиск с нужной записью
void r_GiveBaggiHoloToPlayer( Critter& player, Critter@ npc )
{
    // сначала нужно забрать исходный голодиск, неважно какой, тот, который первым попадется
    if( player.CountItem( PID_HOLODISK ) == 0 )
    {
        return;
    }
    // проверка статуса квеста "багги"
    GameVar @ qVar = GetLocalVar( LVAR_q_ncr_ratch_buggy, player.Id );
    if( not valid( qVar ) )
        return;
    if( qVar != 2 )
        return;

    // удаляем существующий голодиск у игрока
    player.DeleteItem( PID_HOLODISK, 1 );
    // даем новый голодиск с нужными данными
    Item@ holo = player.AddItem( PID_HOLODISK, 1 );
    // переключаем статус квеста
    qVar = 3;
    holo.SetScript( "ncr_ratch@_HoloBuggyInit" );
}
// скрипт инициализации для голодиска
void _HoloBuggyInit( Item& holo, bool firstTime )
{
// ставим нужную запись к голодиску
    holo.HolodiskNumber = HOLO_MSG_ID_BUGGY;
    // подписываемся на использование голодиска клешней
    holo.SetEvent( ITEM_EVENT_USE, "_eBuggyHoloUse" );
    holo.Update();
}

// обработчик использовнаия голодиска
bool _eBuggyHoloUse( Item& item, Critter& crit, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{
    // гасим обработку голодиска, не нужно чтобы в пипбой с этого диска что-то записывалось
    return true;
}


// отдаем багги игроку!
// пример из nr_t-ray.fos
uint r_GiveBuggyToPlayer( Critter& player, Critter@ npc )
{


    GameVar @ qVar = GetLocalVar( LVAR_q_ncr_ratch_buggy, player.Id );
    // квест уже был сдан ранее
    if( qVar == 6 )
        FORCE_DIALOG;
    // получаем карту с игроком
    Map@ map = player.GetMap();
    if( not valid( map ) )
        FORCE_DIALOG;
    // создаем массив хексов
    Entire[] entires;
    ParseEntires( map, entires, ENTIRE_BUGGY_PLACE );

    uint16 hx, hy, entNum;
    for( int i = 0, j = entires.length(); i <= j; i++ )
    {
        // не найдено свободное место
        if( i == j )
            FORCE_DIALOG;

        Entire@ ent = entires[ i ];
        // проверка, что машина влезет
        if( map.CheckPlaceForItem( ent.HexX, ent.HexY, PID_BUGGY ) )
        {
            hx = ent.HexX;
            hy = ent.HexY;
            entNum = ent.Number;
            break;
        }
    }
    // ключ
    uint  keyId = Random( 10000, 50000 );
    // добавление тачки на карту
    Item@ car = map.AddItem( hx, hy, PID_BUGGY, 1 );

    if( not valid( car ) )
        FORCE_DIALOG;
    GameVar@ isQuest = GetLocalVar( LIVAR_is_quest_item, car.Id );
    if( valid( isQuest ) )
        isQuest = 1;
    car.LockerId = keyId;
    car.Charge = car.Proto.Car_TankVolume;
    car.Update();

    Item@ bag = car.GetChild( 0 );
    if( valid( bag ) )
    {
        bag.LockerId = keyId;
        // крутой багажник
        bag.LockerComplexity = Random( 95, 100 );
        bag.Update();
    }

    Item@ key = player.AddItem( PID_KEY, 1 );
    if( valid( key ) )
    {
        key.LockerId = keyId;
        key.Update();
    }
    // изменяем статус квеста
    qVar = 6;
    // player.AddExperience(5500);obsolete
    player.StatBase[ ST_EXPERIENCE ] += 10000;

    return 0;
}
