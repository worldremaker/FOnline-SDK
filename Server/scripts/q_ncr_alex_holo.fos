#include "_macros.fos"
#define HOLO_MSG_ID_MOTOR_Q    ( 52 )                                                                       // номер текста голодиска
#define ENC_MAP_PID            ( 307 )                                                                      // PID нужной карты

/*
   {2900}{}{Кажется, это то самое место, о котором говорится в голодиске. Осталось найти ящик.}
   {2901}{}{Это место не похоже на то, что указано в голодиске.}
 */
#define MSG_NUM_WRONG_LOC      ( 2900 )
#define MSG_NUM_RIGHT_LOC      ( 2901 )


void _HoloInit( Item& holo, bool firstTime )
{
    // запись нужной информации
    holo.HolodiskNumber = HOLO_MSG_ID_MOTOR_Q;

    // if (firstTime)
    // {
    // если подписываться на событие только при firsttime = true, при перезапуске сервера подписка пропадает
    holo.SetEvent( ITEM_EVENT_USE, "_eHoloUse" );

    // }
    // подтверждение изменений с голодиском
    holo.Update();
}
// функция-результат для диалога с алексом
void r_GiveHoloToPlayer( Critter& player, Critter@ npc )
{
    // даем игроку голодиск
    Item@ holo = player.AddItem( PID_HOLODISK, 1 );
    // установка скрипта голодиску
    holo.SetScript( "q_ncr_alex_holo@_HoloInit" );
}

// обработчик использования голодиска
// если игрок использует голодиск в энке нужного прототипа, получит экспу и в ящик положим лут
bool _eHoloUse( Item& item, Critter& crit, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{

    if( item.GetProtoId() != PID_HOLODISK )
    {
        return false;
    }

    if( item.HolodiskNumber != HOLO_MSG_ID_MOTOR_Q )
    {
        // не тот ид, значит диск перезаписали, нужно отписываться от события
        item.SetEvent( ITEM_EVENT_USE, "" );
        return false;
    }

    if( !crit.IsPlayer() )
    {
        return false;
    }

    if( crit.GetMapProtoId() == ENC_MAP_PID )
    {
        // находимся в карте нужной локи
        // проверяем, что квест нужного статуса
        GameVar@ qstatus = GetLocalVar( LVAR_ncr_alex_holo_find_status, crit.Id );
        // если статус не правильный, либо игрок брал квест, либо уже забрал лут из ящика
        if( qstatus != 1 )
        {
            return false;
        }
        // меняем статус переменной
        qstatus = 2;
        // по известным координатам ищем деревянную коробку
        Item@ container = crit.GetMap().GetItem( 59, 64, PID_CONTAINER_WOOD_CRATE );
        // контейнер найден
        if( valid( container ) )
        {
            // кладем лут в контейнер
            // 1..3 психо
            container.AddItem( PID_PSYCHO, Random( 1, 3 ), 0 );
            // 900..1700 монет
            container.AddItem( PID_BOTTLE_CAPS, Random( 1, 7 ) * 100 + 800, 0 );
            container.Update();
            // сообщаем игроку, что место верное
            // crit.Say(SAY_NETMSG,"Кажется, это то самое место, о котором говорится в голодиске. Осталось найти ящик.");
            crit.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, MSG_NUM_RIGHT_LOC );
            // выдаем опыт
            //			crit.AddExperience(450); устарело
            crit.StatBase[ ST_EXPERIENCE ] += 450;
            // отписываемся от события
            item.SetEvent( ITEM_EVENT_USE, "" );
            return true;
        }

    }
    else
    {
        // не та локация
        crit.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, MSG_NUM_WRONG_LOC );
        // crit.Say(SAY_NETMSG,"Это место не похоже на то, что указано в голодиске.");
    }

    return false;
}
