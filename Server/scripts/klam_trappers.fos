// Author: Cracker

#include "_macros.fos"

#define ENTIRE_MOVE_EXIT_TRAP     ( 301 )               // Ентайри на который идут трапперы при возвращении домой
#define MIKE_ROLE_ID              ( 30 )                // Роль Майка.
#define BRIAN_ROLE_ID             ( 31 )                // Роль Брайна.

#define MIKE_ENTIRE_HOME          ( 40 )                // Номер энтайри по которому определятся домашняя позиция Майка в Кламате.
#define BRIAN_ENTIRE_HOME         ( 41 )                // Номер энтайри по которому определятся домашняя позиция Брайна в Кламате.
#define EMMA_ENTIRE_START_HOME    ( 29 )                // Номер энтайри на котором стоит Эмма в Кламате.
#define EMMA_ENTIRE_END_HOME      ( 39 )                // Номер энтайри на который уходит Эмма.

#define START_MOVE_TIME           ( 60 * 60 * 24 * 30 ) // через это время трапперы пойдут в Кламат.


import bool GetEntireFreeHex( Map& map, int number, uint16& hx, uint16& hy ) from "entire";
import uint GetNearFullSecond( uint16 year, uint16 month, uint16 day, uint16 hour, uint16 minute, uint16 second ) from "time";

void _Move( Critter& player, int p0, int p1, int p2 )
{
    Critter@[] critters;
    if( ( player.GetMap() ).GetCrittersHex( player.HexX, player.HexY, 100, FIND_ALL, critters ) != 0 )
    {
        for( uint i = 0, j = critters.length(); i < j; i++ )
        {
            Critter@ cr = critters[ i ];
            if( cr.StatBase[ ST_NPC_ROLE ] == MIKE_ROLE_ID || cr.StatBase[ ST_NPC_ROLE ] == BRIAN_ROLE_ID )
            {
                uint16 hx = 0;
                uint16 hy = 0;
                GetEntireFreeHex( ( player.GetMap() ), ENTIRE_MOVE_EXIT_TRAP, hx, hy );
                cr.SetHomePos( hx, hy, Random( 0, 5 ) );
            }
        }
    }
}

void t_Transit( Critter& cr, Scenery& entiry, bool entered, uint8 dir )
{
    if( cr.StatBase[ ST_NPC_ROLE ] == MIKE_ROLE_ID || cr.StatBase[ ST_NPC_ROLE ] == BRIAN_ROLE_ID )
    {
        cr.TransitToMap( ( ( GetLocation( LOCATION_Klamath ) ).GetMapByIndex( 0 ) ).Id, 1 );
        uint16 hx = 0;
        uint16 hy = 0;
        GetEntireFreeHex( ( ( GetLocation( LOCATION_Klamath ) ).GetMapByIndex( 0 ) ), ( cr.StatBase[ ST_NPC_ROLE ] == MIKE_ROLE_ID ? ENTIRE_MOVE_EXIT_TRAP : BRIAN_ENTIRE_HOME ), hx, hy );
        cr.SetHomePos( hx, hy, ( cr.StatBase[ ST_NPC_ROLE ] == MIKE_ROLE_ID ? 1 : 3 ) );
        cr.StatBase[ ST_DIALOG_ID ] = ( cr.StatBase[ ST_NPC_ROLE ] == MIKE_ROLE_ID ? DIALOG_klam_mike_post_quest : DIALOG_klam_bryan_post_quest );
        cr.StatBase[ ST_BAG_ID ] = 51;
        GetEntireFreeHex( ( ( GetLocation( LOCATION_Klamath ) ).GetMapByIndex( 0 ) ), EMMA_ENTIRE_START_HOME, hx, hy );
        Critter@[] critters;
        if( ( ( GetLocation( LOCATION_Klamath ) ).GetMapByIndex( 0 ) ).GetCrittersHex( hx, hy, 100, FIND_ALL, critters ) != 0 )
        {
            for( uint i = 0, j = critters.length(); i < j; i++ )
            {
                if( critters[ i ].StatBase[ ST_DIALOG_ID ] == DIALOG_klam_emma )
                {
                    critters[ i ].StatBase[ ST_DIALOG_ID ] = DIALOG_klam_emma_post_quest;
                    GetEntireFreeHex( ( ( GetLocation( LOCATION_Klamath ) ).GetMapByIndex( 0 ) ), EMMA_ENTIRE_END_HOME, hx, hy );
                    critters[ i ].SetHomePos( hx, hy, 3 );
                }
            }
        }
    }
    return;
}

void t_TransitMike( Critter& cr, Scenery& entiry, bool entered, uint8 dir )
{
    if( cr.StatBase[ ST_NPC_ROLE ] == MIKE_ROLE_ID )
    {
        uint16 hx = 0;
        uint16 hy = 0;
        cr.TransitToMap( ( ( GetLocation( LOCATION_Klamath ) ).GetMapByIndex( 1 ) ).Id, 2 );
        GetEntireFreeHex( ( ( GetLocation( LOCATION_Klamath ) ).GetMapByIndex( 1 ) ), MIKE_ENTIRE_HOME, hx, hy );
        cr.SetHomePos( hx, hy, 1 );
    }
}

void r_StartMove( Critter& player, Critter@ npc )
{
    CreateTimeEvent( __FullSecond + START_MOVE_TIME, "e_Move", player.Id, false );
}

uint e_Move( uint[] @ values )
{
    _Move( GetCritter( values[ 0 ] ), 0, 0, 0 );
    return 0;
}
