// Author: rifleman17
// Бартер с ограничениями. Нпц покупает или продает вещи только из ограниченного списка.

#include "_macros.fos"
#include "serializator.fos"

#define _Key    # (crId)  ( "LB_" + crId )

class BarterLimit
{
    BarterLimit( int crId )
    {
        this.CrId = crId;
        if( IsAnyData( _Key( crId ) ) )
            if( IsAnyData( _Key( crId ) ) )
                this.Load();
    }
    int CrId;              // Код криттера, к которому применяются ограничения
    int[] AllowedPidsSale; // Коды предметов, которые НПЦ продает
    int[] AllowedPidsBuy;  // Коды предметов, которые НПЦ покупает

    bool BartedAllowed( int itemPid, bool isSale )
    {
        return ( isSale ? ( this.AllowedPidsSale.length() == 0 ||
                            this.AllowedPidsSale.find( itemPid ) >= 0 ) :
                 ( this.AllowedPidsBuy.length() == 0 ||
                   this.AllowedPidsBuy.find( itemPid ) >= 0 ) );
    }

    void Load()
    {
        Serializator load;
        if( load.Load( _Key( this.CrId ) ) )
        {
            load.Get( this.AllowedPidsSale );
            load.Get( this.AllowedPidsBuy );
        }
    }

    void Save()
    {
        Serializator save;
        save.Set( this.AllowedPidsSale );
        save.Set( this.AllowedPidsBuy );
        save.Save( _Key( this.CrId ) );
    }
}

void SaveBarterLimit( uint crId, int[] sellLimits, int[] buyLimits )
{
    BarterLimit bl = BarterLimit( crId );
    if( IsAnyData( _Key( crId ) ) )
        EraseAnyData( _Key( crId ) );
    if( sellLimits.length() > 0 )
    {
        bl.AllowedPidsSale.resize( 0 );
        bl.AllowedPidsSale = sellLimits;
    }
    if( buyLimits.length() > 0 )
    {
        bl.AllowedPidsBuy.resize( 0 );
        bl.AllowedPidsBuy = buyLimits;
    }
    bl.Save();
}

bool BarterAllowed( int crId, Item@[]& buyItems,  Item@[]& saleItems )
{
    if( IsAnyData( _Key( crId ) ) )
    {
        BarterLimit bl = BarterLimit( crId );
        for( uint i = 0, l = buyItems.length(); i < l; i++ )
        {
            Item@ item = buyItems[ i ];
            if( valid( item ) && !bl.BartedAllowed( item.GetProtoId(), false ) )
                return false;
        }
        for( uint i = 0, l = saleItems.length(); i < l; i++ )
        {
            Item@ item = saleItems[ i ];
            if( valid( item ) && !bl.BartedAllowed( item.GetProtoId(), false ) )
                return false;
        }
    }
    return true;
}
