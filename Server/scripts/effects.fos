// Author: cvet
#include "_macros.fos"

// Screen fading:
// import void FlushScreen(Critter& cr, bool fadeOut, uint timeMs) from "effects";
// import void FlushScreen(Critter& cr, uint fromColor, uint toColor, uint timeMs) from "effects";
// import void FlushScreen(Map& map, bool fadeOut, uint timeMs) from "effects";
// import void FlushScreen(Map& map, uint fromColor, uint toColor, uint timeMs) from "effects";
// Screen quake:
// import void QuakeScreen(Critter& cr) from "effects";
// import void QuakeScreen(Critter& cr, uint noise, uint timeMs) from "effects";
// import void QuakeScreen(Map& map) from "effects";
// import void QuakeScreen(Map& map, uint noise, uint timeMs) from "effects";

// Default values
#define QUAKE_NOISE    ( 8 )
#define QUAKE_TIME     ( 800 )


void FlushScreen( Critter& cr, bool fadeOut, uint timeMs ) // Export
{
    if( cr.IsPlayer() )
        cr.RunClientScript( "_FlushScreen", fadeOut ? 0xFF000000 : 0, fadeOut ? 0 : 0xFF000000, int(timeMs), null, null );
}

void FlushScreen( Critter& cr, uint fromColor, uint toColor, uint timeMs ) // Export
{
    if( cr.IsPlayer() )
        cr.RunClientScript( "_FlushScreen", int(fromColor), int(toColor), int(timeMs), null, null );
}

void FlushScreen( Map& map, bool fadeOut, uint timeMs ) // Export
{
    Critter@[] critters;
    map.GetCritters( 0, FIND_ALL | FIND_ONLY_PLAYERS, critters );
    for( uint i = 0, j = critters.length(); i < j; i++ )
        critters[ i ].RunClientScript( "_FlushScreen", fadeOut ? 0xFF000000 : 0, fadeOut ? 0 : 0xFF000000, int(timeMs), null, null );
}

void FlushScreen( Map& map, uint fromColor, uint toColor, uint timeMs ) // Export
{
    Critter@[] critters;
    map.GetCritters( 0, FIND_ALL | FIND_ONLY_PLAYERS, critters );
    for( uint i = 0, j = critters.length(); i < j; i++ )
        critters[ i ].RunClientScript( "_FlushScreen", int(fromColor), int(toColor), int(timeMs), null, null );
}

void QuakeScreen( Critter& cr ) // Export
{
    if( cr.IsPlayer() )
        cr.RunClientScript( "_QuakeScreen", QUAKE_NOISE, QUAKE_TIME, 0, null, null );
}

void QuakeScreen( Critter& cr, uint noise, uint timeMs ) // Export
{
    if( cr.IsPlayer() )
        cr.RunClientScript( "_QuakeScreen", int(noise), int(timeMs), 0, null, null );
}

void QuakeScreen( Map& map ) // Export
{
    Critter@[] critters;
    map.GetCritters( 0, FIND_ALL | FIND_ONLY_PLAYERS, critters );
    for( uint i = 0, j = critters.length(); i < j; i++ )
        critters[ i ].RunClientScript( "_QuakeScreen", QUAKE_NOISE, QUAKE_TIME, 0, null, null );
}

void QuakeScreen( Map& map, uint noise, uint timeMs ) // Export
{
    Critter@[] critters;
    map.GetCritters( 0, FIND_ALL | FIND_ONLY_PLAYERS, critters );
    for( uint i = 0, j = critters.length(); i < j; i++ )
        critters[ i ].RunClientScript( "_QuakeScreen", int(noise), int(timeMs), 0, null, null );
}
