#include "_macros.fos"
#include "_dialogs.fos"

// Квест "Семья". Вэлери
#define LOC_NAME             # (locId)               ( ( locId + 100 ) * 1000 )    // поиск названия локации в файле FOGM.msg
#define NPC_NAME             # (dialogId)            ( ( dialogId ) * 1000 + 100 ) // поиск имени НПЦ в файле FODLG.msg
#define MAIL_VAL0            ( 1234 )                                              // Условный код для проверок в диалоге.
#define STR_LOW_SPEECH       ( 5800 )                                              // Строка при чтении письма - низкая речь.
#define STR_HIGH_SPEECH      ( 5801 )                                              // Строка при чтении письма - высокая речь.
#define STR_HIGH_SPEECH2     ( 5802 )                                              // Чтобы сократить объем текста - выводим за два приема.
#define MIN_SPEECH           ( 100 )                                               // Минимальная речь для того, чтобы прочесть письмо.

void r_GiveMail( Critter& cr, Critter @ npc )
{
    Item@ item = cr.AddItem( PID_POSTMAN_LETTER, 1 );
    if( valid( item ) )
    {
        item.SetLexems( "$reciever@msg DLG " + NPC_NAME( DIALOG_klam_vic ) + " @$location@msg GM " + LOC_NAME( LOCATION_Klamath ) + " @" );
        item.SetScript( "_ValeryMailInit" );
        item.Val0 = MAIL_VAL0;
        item.Val1 = cr.Id;
        item.Update();
    }
}

void _ValeryMailInit( Item& item, bool firstTime )
{
    item.SetEvent( ITEM_EVENT_USE, "_MailUse" );
}

bool _MailUse( Item& item, Critter& cr, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{
    if( valid( onItem ) || valid( onCritter ) || valid( onScenery ) || cr.Id != uint( item.Val1 ) )
        return false;

    if( cr.Skill[ SK_SPEECH ] < MIN_SPEECH )
    {
        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_LOW_SPEECH );
    }
    else
    {
        GameVar @ check  = GetLocalVar( LVAR_vc_mail_remembered, cr.Id );
        if( valid( check ) )
        {
            if( check == 0 )
            {
                check = 1;
                cr.StatBase[ ST_EXPERIENCE ] += 500;
            }
        }
        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_HIGH_SPEECH );
        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_HIGH_SPEECH2 );
    }
    return true;
}

bool d_HasMail( Critter& cr, Critter @ npc )
{
    Item@[] items;
    if( cr.GetItems( -1, items ) > 0 )
    {
        for( uint i = 0, l = items.length(); i < l; i++ )
        {
            if( items[ i ].GetProtoId() == PID_POSTMAN_LETTER && items[ i ].Val0 == MAIL_VAL0 )
            {
                return true;
            }
        }
    }
    return false;
}

bool d_NoMail( Critter& cr, Critter @ npc )
{
    return ( !d_HasMail( cr, npc ) );
}

// Квест, "Свет мой, Зеркальце". ГУ, Хелен Трой
#define HOLO_MSG_ID          ( 55 )
#define STR_LOW_SCIENCE      ( 5805 )
#define STR_HIGH_SCIENCE     ( 5806 )
#define MIN_SCIENCE          ( 100 )
#define MIN_DOCTOR           ( 80 )

void r_WriteHolodisk( Critter& player, Critter @ npc, int val )
{
    if( player.CountItem( PID_HOLODISK ) == 0 )
    {
        return;
    }
    player.DeleteItem( PID_HOLODISK, 1 );
    Item@ holo = player.AddItem( PID_HOLODISK, 1 );
    holo.SetScript( "vcity_common@_HoloInit" );
}

void _HoloInit( Item& holo, bool firstTime )
{
    holo.HolodiskNumber = HOLO_MSG_ID;
    holo.SetEvent( ITEM_EVENT_USE, "_HoloUse" );
    holo.SetEvent( ITEM_EVENT_SKILL, "_HoloSkill" );
    holo.Update();
}

bool _HoloSkill( Item& item, Critter& cr, int skill )
{
    return true;
}

bool _HoloUse( Item& item, Critter& cr, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{
    if( valid( onItem ) || valid( onScenery ) )
        return true;
    if( cr.Stat[ ST_GENDER ] == 0 )
        return true;
    if( cr.Skill[ SK_SCIENCE ] >= MIN_SCIENCE && cr.Skill[ SK_DOCTOR ] >= MIN_DOCTOR )
    {
        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_HIGH_SCIENCE );
        GameVar @ check = GetLocalVar( LVAR_vc_beauty_holo_remembered, cr.Id );
        if( valid( check ) )
        {
            if( check == 0 )
                check = 1;
        }
    }
    else
    {
        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_LOW_SCIENCE );
    }
    return true;
}

// Клиника для доктора Блэка.
#define BLACK_JACK_PID       ( 267 )
import void CancelMerc( Critter& merc ) from "merc";

void r_CancelDoctorMerc( Critter& player, Critter @ npc )
{
    if( !valid( npc ) )
        return;
    CancelMerc( npc );
    npc.SetScript( "map_geck_city@_GeckTraderInit" );
}

bool d_CheckIsBlackHere( Critter& player, Critter @ npc )
{
    if( !valid( npc ) )
        return false;
    Map @ map = npc.GetMap();
    if( !valid( map ) )
        return false;
    return ( map.GetCritters( BLACK_JACK_PID, FIND_LIFE | FIND_ONLY_NPC, null ) > 0 );
}

bool d_CheckNotBlackHere( Critter& player, Critter @ npc )
{
    return ( !d_CheckIsBlackHere( player, npc ) );
}

// Проказник Баркус
#define STR_BARKUS_MALE      ( 1 )
#define STR_BARKUS_FEMALE    ( 2 )
void _BarkusInit( Critter& cr, bool firstTime )
{
    cr.ShowCritterDist1 = 8;
    cr.SetEvent( CRITTER_EVENT_SHOW_CRITTER_1, "_BarkusShowCr" );
}

void _BarkusShowCr( Critter& cr, Critter& showCrit )
{
    if( uint( cr.Stat[ ST_VAR2 ] ) < __FullSecond && showCrit.IsPlayer() && showCrit.IsLife() )
    {
        GameVar@ qVar = GetLocalVar( LVAR_q_vc_amanda_help_joshua, showCrit.Id );
        if( valid( qVar ) && qVar.GetValue() >= 7 )
        {
            cr.SayMsg( SAY_NORM, TEXTMSG_TEXT, DLGSTR( cr.Stat[ ST_DIALOG_ID ], ( cr.Stat[ ST_GENDER ] == 0 ? STR_BARKUS_MALE : STR_BARKUS_FEMALE ) ) );
            cr.StatBase[ ST_VAR2 ] = __FullSecond + __TimeMultiplier * 30;         // Не чаще двух раз в минуту
        }
    }
}


// Диалог посетителей бара у стойки
#define ROLE_BAR_TALKER      ( 56 )     // Роль говорунов

import void BeginDialog( Critter& cr, int dialog ) from "npc_dialog";

void _BarTalkerInit( Critter& cr, bool firstTime )
{
    cr.StatBase[ ST_VAR9 ] = 4;
    cr.SetEvent( CRITTER_EVENT_MESSAGE, "npc_dialog@_NpcMessage" );
}

void t_RunNpcDialog( Critter& player, Scenery& trigger, bool entered, uint8 dir )
{
    if( !entered || !player.IsPlayer() )
        return;
    Map@ map = player.GetMap();
    if( !valid( map ) )
        return;
    GameVar @ lastDialog = GetLocalVar( LMVAR_vc_last_bar_dialog, map.Id );
    if( valid( lastDialog ) && uint( lastDialog.GetValue() ) < __FullSecond )
    {
        lastDialog = __FullSecond + REAL_MINUTE( 30 );
        Critter @ cr = map.GetNpc( ROLE_BAR_TALKER, FIND_LIFE | FIND_ONLY_NPC, 0 );
        if( valid( cr ) )
        {
            BeginDialog( cr, 5 );
        }
    }
}
