// Author: rifleman17
// Постеры, которые можно вешать на стену
// Игрок использует свернутый плакат в инвентаре, если стоит на нужном гексе, то на стену рядом вешается плакат
// Гексы расставил Dagnir на картах личных складов
#include "_macros.fos"
#include "entire.fos"

#define STR_USED            ( 5 )
#define STR_WRONG_WALL      ( 6 )

#define ENTIRE_SN_POSTER    ( 1752 )
#define ENTIRE_EW_POSTER    ( 1704 )

int[][] posters =
/*  Info, Cost, SN стена, EW стена*/
{
    { 2, 1000, 616, 617 },
    { 4, 2000, 618, 619 },
    { 6, 3000, 620, 621 },
    { 8, 4000, 622, 623 },
    { 10, 5000, 624, 625 },
    { 12, 9000, 626, 627 },
    { 14, 12000, 628, 629 },
    { 16, 15000, 630, 631 },
    { 18, 22000, 632, 633 }
};

void _BundleInit( Item& item, bool firstTime )
{
    if( firstTime )
    {
        uint idx = Random( 0, posters.length() - 1 );
        item.Cost = posters[ idx ][ 1 ];
        item.Info = posters[ idx ][ 0 ];
        item.Val0 = posters[ idx ][ 2 ];
        item.Val1 = posters[ idx ][ 3 ];
    }
    item.SetEvent( ITEM_EVENT_USE, "_BundleUse" );
    item.Update();

}

bool _BundleUse( Item& item, Critter& cr, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{
    Map@ map = cr.GetMap();
    if( valid( map ) && !valid( onCritter ) && !valid( onItem ) && !valid( onScenery ) )
    {
        Entire[] entires;
        ParseEntires( map, entires, ENTIRE_SN_POSTER );
        ParseEntires( map, entires, ENTIRE_EW_POSTER );
        uint16 x = cr.HexX;
        uint16 y = cr.HexY;
        Item@  poster;
        for( uint i = 0, l = entires.length(); i < l; i++ )
        {
            if( entires[ i ].HexX == cr.HexX && entires[ i ].HexY == cr.HexY )
            {
                if( entires[ i ].Number == ENTIRE_EW_POSTER )
                {
                    map.MoveHexByDir( x, y, 5, 1 );
                    map.MoveHexByDir( x, y, 4, 1 );
                    @poster = map.AddItem( x, y, item.Val0, 1 );
                    if( valid( poster ) )
                        SETFLAG( poster.Flags, ITEM_NO_HIGHLIGHT );
                    cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_USED );
                    DeleteItem( item );
                    return true;
                }
                if( entires[ i ].Number == ENTIRE_SN_POSTER )
                {
                    map.MoveHexByDir( x, y, 1, 1 );
                    @poster = map.AddItem( x, y, item.Val1, 1 );
                    if( valid( poster ) )
                        SETFLAG( poster.Flags, ITEM_NO_HIGHLIGHT );
                    cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_USED );
                    cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_USED );
                    DeleteItem( item );
                    return true;
                }
            }
        }
        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, STR_WRONG_WALL );
        return true;
    }
    return false;
}
